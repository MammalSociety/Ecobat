Nights.lowmod = sum(activity_level=="low/medium"),
Nights.low = sum(activity_level=="low"))
#rename columns
names(actdata)[names(actdata)=="location_name"] <- "Location"
names(actdata)[names(actdata)=="species"] <- "Species/Species Group"
names(actdata)[names(actdata)=="Nights.high"] <- "Nights of High Activity"
names(actdata)[names(actdata)=="Nights.modhigh"] <- "Nights of Moderate/ High Activity"
names(actdata)[names(actdata)=="Nights.mod"] <- "Nights of Moderate Activity"
names(actdata)[names(actdata)=="Nights.lowmod"] <- "Nights of Low/ Moderate Activity"
names(actdata)[names(actdata)=="Nights.low"] <- "Nights of Low Activity"
library(knitr)
results='asis'#important to run this as it ensures the raw table output isn't processed further by knitr
datatable2<-actdata
emphasize.italics.cols(2) #second column needs to be in italics i.e. species names
panderOptions("table.split.table", Inf) #don't split table
pander(datatable2, style = 'rmarkdown', keep.line.breaks=TRUE)
library(plyr)
library(rcompanion)
con<-subset(wp, surv>=2) #subset dataset to only include records with more than one night of surveying
confint<-groupwiseMedian(percentile ~ location_name + Spp, #code to get confidence intervals
data       = con,
conf       = 0.95,
R          = 1000,
wilcox =   TRUE,
bca        = FALSE,
digits     = 3)
confint <- transform(confint, Wilcox.lower = ifelse(Wilcox.lower == "NaN", Median, Wilcox.lower))
confint <- transform(confint, Wilcox.upper = ifelse(Wilcox.upper == "NaN", Median, Wilcox.upper))
mm<-merge(con, confint) #merge with subsetted dataset to put columns with the confidence intervals on the end
mm$confint = paste(mm$Wilcox.lower, mm$Wilcox.upper, sep=" - ") #add a new column with CIs merged
non<-subset(wp,surv=="1") #subset dataset to only include records with one night of surveying
if(nrow(non)>0) {
non$n <- 0 #add empty columns to enable merger
non$Median <- 0
non$Wilcox.upper <- 0
non$Wilcox.lower <- 0
non$confint <- 0}
please<-rbind(mm, non) #join the two datasets back together
library(plyr) #ddply as normal
mdata2 <- plyr::ddply(please, c("location_name", "species"), summarise,
Median.percentile = ceiling(median(percentile)),#finds median percentile
conf = max(confint),
Highest.perc = max(percentile), #returns max percentiles
Number.nights = length(date), #returns how many nights of data in the dataset
Reference.range.size = mean(reference_range_size)) #returns reference range size - i used mean as it should be the
#same in each row because same species same location
names(mdata2)[names(mdata2)=="location_name"] <- "Location"
names(mdata2)[names(mdata2)=="species"] <- "Species/Species Group"
names(mdata2)[names(mdata2)=="Median.percentile"] <- "Median Percentile"
names(mdata2)[names(mdata2)=="conf"] <- "95% CIs"
names(mdata2)[names(mdata2)=="Highest.perc"] <- "Max Percentile"
names(mdata2)[names(mdata2)=="Number.nights"] <- "Nights Recorded"
names(mdata2)[names(mdata2)=="Reference.range.size"] <- "Reference Range"
library(knitr)
library(pander)
results='asis' #important to run this as it ensures the raw table output isn't processed further by knitr
medtable2<-mdata2
emphasize.italics.cols(2)
panderOptions("table.split.table", Inf)
panderOptions("table.split.cells", Inf)
pander(medtable2, style = 'multiline', keep.line.breaks=TRUE,justify = c('right', 'left', 'centre', 'centre', 'centre', 'centre', 'centre'))
#boxplot if 1 location
if(loc=="1") {graphbox<-ggplot(df, aes(x=Spp, y=percentile))+ #add lines first
geom_hline(aes(yintercept=0), linetype="dashed", color="#000000") +
geom_hline(aes(yintercept=20), linetype="dashed", color="#0072B2") +
geom_hline(aes(yintercept=40), linetype="dashed", color="#56B4E9") +
geom_hline(aes(yintercept=60), linetype="dashed", color="#009E73") +
geom_hline(aes(yintercept=80), linetype="dashed", color="#E69F00") +
geom_boxplot(df, mapping = aes(fill=species))+
xlab("Species")+
ylab("Bat Activity Level (Percentile)")+
scale_fill_grey(start = 0.35, end = 1)+
scale_x_discrete(drop=FALSE) +
scale_y_continuous(breaks=seq(0,100,20)) +
expand_limits(y=c(0,100))+
theme_bw() +
theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.border = element_rect(linetype="blank"),
axis.line=element_line(size=0.5, colour="black", linetype="solid"),
axis.title.x=element_text(size=18),
axis.text.x  = element_text(angle=90, face="italic", size=14, hjust=1, vjust=0),
axis.text.y  = element_text(size=12),
axis.line.x = element_line(color="black", size = 0.5),
axis.line.y = element_line(color="black", size = 0.5),
axis.title.y=element_text(size=16),
legend.position="none")
graphbox}
#endcode for boxplot
#boxplot if 1 location
if(loc=="1") {graphbox<-ggplot(df, aes(x=Spp, y=percentile))+ #add lines first
geom_hline(aes(yintercept=0), linetype="dashed", color="#000000") +
geom_hline(aes(yintercept=20), linetype="dashed", color="#0072B2") +
geom_hline(aes(yintercept=40), linetype="dashed", color="#56B4E9") +
geom_hline(aes(yintercept=60), linetype="dashed", color="#009E73") +
geom_hline(aes(yintercept=80), linetype="dashed", color="#E69F00") +
geom_boxplot(df, mapping = aes(fill=species))+
xlab("Species")+
ylab("Bat Activity Level (Percentile)")+
scale_fill_grey(start = 0.35, end = 1)+
scale_x_discrete(drop=TRUE) +
scale_y_continuous(breaks=seq(0,100,20)) +
expand_limits(y=c(0,100))+
theme_bw() +
theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.border = element_rect(linetype="blank"),
axis.line=element_line(size=0.5, colour="black", linetype="solid"),
axis.title.x=element_text(size=18),
axis.text.x  = element_text(angle=90, face="italic", size=14, hjust=1, vjust=0),
axis.text.y  = element_text(size=12),
axis.line.x = element_line(color="black", size = 0.5),
axis.line.y = element_line(color="black", size = 0.5),
axis.title.y=element_text(size=16),
legend.position="none")
graphbox}
#endcode for boxplot
Night_month <- All_data %>%
dplyr::group_by(Spp, Night, Month, location_name) %>%
dplyr::count()
for (i in unique(All_data$Spp)) {
new <- Night_month %>%
dplyr::filter(Spp == i)
print(new %>%
ggplot(aes(Month, n, fill=location_name)) +
geom_boxplot(aes(fill=location_name)) +
scale_fill_brewer(palette = "RdBu") +
ylab("Bat passes per night\n") +
xlab("\nMonth") +
{if (max(new$n) <=5)ylim(-0.5,5)} +
{if (max(new$n) > 5 & max(new$n) <=10)ylim(-1,10)} +
{if (max(new$n) > 10 & max(new$n) <=20)ylim(-1,20)} +
{if (max(new$n) > 20 & max(new$n) <=50)ylim(-1,50)} +
{if (max(new$n) > 50 & max(new$n) <=100)ylim(-1,100)} +
{if (max(new$n) > 100 & max(new$n) <=200)ylim(-1,200)} +
{if (max(new$n) > 200 & max(new$n) <=300)ylim(-1,300)} +
{if (max(new$n) > 300 & max(new$n) <=500)ylim(-1,500)} +
{if (max(new$n) > 500 & max(new$n) <=1000)ylim(-1,1000)} +
geom_text(aes(y=(min(n)-1), x=Month, label=location_name, group=location_name),
position=position_dodge(0.8), size=4) +
theme_bw() +
theme (axis.title.y = element_text(colour="black", size=18,
face="bold")) +
theme (axis.title.x = element_text(colour="black", size=18,
face="bold")) +
theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.border = element_rect(colour="black", linetype="solid"),
axis.line=element_line(size=0.5, colour="black",
linetype="solid")) +
theme(axis.text.x = element_text(size=16, hjust=0.5, vjust=1,
colour = "black")) +
theme(axis.text.y = element_text(size = 16, colour = "black")) +
ggtitle(i) +
theme(plot.title = element_text(face = "bold.italic", size = 22)) +
theme(legend.position="none"))
# guides(fill=guide_legend(title="Detector ID")) +
# theme(legend.text=element_text(size=18)) +
# theme(legend.title=element_text(size=20)))
#
}
Table <- All_data %>%
dplyr::group_by(Spp, location_name, post_set_hr_int) %>%
dplyr::count() %>%
spread(post_set_hr_int, n) %>%
replace(is.na(.), 0) %>%
dplyr::rename("species" = Spp, "Detector ID" = location_name)
# simple table
knitr::kable(Table)
for (i in unique(All_data$Spp)) {
print(All_data %>%
dplyr::filter(Spp == i) %>%
ggplot(aes(Night, post_set_min)) +
stat_density2d(aes(alpha = ..level.., fill =..level..), geom="polygon") +
# geom_density2d() +
scale_fill_gradient(low = "yellow", high = "red") +
geom_point(size=2, alpha = 0.5) +
geom_line(data = sun_data, aes(Night, night_length_min),
linetype = "dashed", colour = "red") +
xlab("\nDate") +
ylab("Minutes after sunset\n") +
#scale_x_date(date_breaks = "1 month", date_labels = "%b %d") +
theme_bw() +
theme (legend.position = "none") +
theme (axis.title.y = element_text(colour="black", size=18,
face="bold")) +
theme (axis.title.x = element_text(colour="black", size=18,
face="bold")) +
theme(strip.text.x = element_text(size=18, face="bold")) +
theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.border = element_rect(colour="black", linetype="solid"),
axis.line=element_line(size=0.5, colour="black",
linetype="solid")) +
theme(axis.text.x = element_text(angle=90, size=16, hjust=1, vjust=0.5,
colour = "black")) +
theme(axis.text.y = element_text(size = 16, colour = "black")) +
facet_wrap(location_name~.) +
ggtitle(i) +
theme(plot.title = element_text(face = "bold.italic", size = 18)))
}
#position = position_jitter(w = 1, h = 0)) +
Detectors <- All_data %>%
dplyr::group_by(location_name, lat, lon) %>%
dplyr::count()
Detectors %>%
ggplot(aes(x=lon, y=lat)) +
geom_point(aes(x=lon, y=lat), fill = "black", colour = "white") +
geom_text(aes(x=lon, y=lat, label=location_name), size=10) +
xlab("\nlon") +
ylab("lat\n") +
xlim((min(Detectors$lon) - 0.001), (max(Detectors$lon) + 0.001)) +
ylim((min(Detectors$lat) - 0.002), (max(Detectors$lat) + 0.002)) +
guides(fill ="legend") +
theme_bw() +
theme (legend.position = "right") +
theme (axis.title.y = element_text(colour="black", size=18,
face="bold")) +
theme (axis.title.x = element_text(colour="black", size=18,
face="bold")) +
theme(strip.text.x = element_text(size=18, face="bold")) +
theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.border = element_rect(colour="black", linetype="solid"),
axis.line=element_line(size=0.5, colour="black",
linetype="solid")) +
theme(axis.text.x = element_text(angle=90, size=16, hjust=1, vjust=0.5,
colour = "black")) +
theme(axis.text.y = element_text(size = 16, colour = "black"))
Table <- All_data %>%
dplyr::group_by(Spp, location_name, Night, lat, lon) %>%
dplyr::count()
Table2 <- Table %>%
dplyr::group_by(Spp, location_name, lat, lon) %>%
dplyr::summarise(Median = median(n))
Table2 %>%
ggplot(aes(lon, lat)) +
geom_point(aes(x = lon, y = lat, size= Median, fill = Median),
colour = "black", pch = 21, position = position_jitter()) +
scale_size_area(max_size = 10) +
scale_fill_gradient(low = "yellow", high = "red") +
xlab("\nlon") +
ylab("lat\n") +
xlim((min(Table$lon) - 0.001), (max(Table$lon) + 0.001)) +
ylim((min(Table$lat) - 0.002), (max(Table$lat) + 0.002)) +
guides(fill ="legend") +
theme_bw() +
theme (legend.position = "right") +
theme (axis.title.y = element_text(colour="black", size=18,
face="bold")) +
theme (axis.title.x = element_text(colour="black", size=18,
face="bold")) +
theme(strip.text.x = element_text(size=18, face="bold")) +
theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.border = element_rect(colour="black", linetype="solid"),
axis.line=element_line(size=0.5, colour="black",
linetype="solid")) +
theme(axis.text.x = element_text(angle=90, size=16, hjust=1, vjust=0.5,
colour = "black")) +
theme(axis.text.y = element_text(size = 16, colour = "black")) +
facet_wrap(~Spp)
View(Table2)
Table <- All_data %>%
dplyr::group_by(Spp, location_name, Night, lat, lon) %>%
dplyr::count()
Table2 <- Table %>%
dplyr::group_by(Spp, location_name, lat, lon) %>%
dplyr::summarise(Median = median(n))
Table2 %>%
ggplot(aes(lon, lat)) +
geom_point(aes(x = lon, y = lat, size= Median, fill = Median),
colour = "black", pch = 21, position = position_jitter()) +
scale_size_area(max_size = 10) +
scale_fill_gradient(low = "yellow", high = "red") +
xlab("\nlon") +
ylab("lat\n") +
xlim((min(Table$lon) - 0.001), (max(Table$lon) + 0.001)) +
ylim((min(Table$lat) - 0.002), (max(Table$lat) + 0.002)) +
guides(fill ="legend") +
theme_bw() +
theme (legend.position = "right") +
theme (axis.title.y = element_text(colour="black", size=18,
face="bold")) +
theme (axis.title.x = element_text(colour="black", size=18,
face="bold")) +
theme(strip.text.x = element_text(size=18, face="bold")) +
theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.border = element_rect(colour="black", linetype="solid"),
axis.line=element_line(size=0.5, colour="black",
linetype="solid")) +
theme(axis.text.x = element_text(angle=90, size=16, hjust=1, vjust=0.5,
colour = "black")) +
theme(axis.text.y = element_text(size = 16, colour = "black")) +
facet_wrap(~Spp)
Table <- All_data %>%
dplyr::group_by(Spp, location_name, Night, lat, lon) %>%
dplyr::count()
Table2 <- Table %>%
dplyr::group_by(Spp, location_name, lat, lon) %>%
dplyr::summarise(Median = median(n))
Table2 %>%
ggplot(aes(lon, lat)) +
geom_point(aes(x = lon, y = lat, size= Median, fill = Median),
colour = "black", pch = 21, position = position_jitter()) +
scale_size_area(max_size = 10) +
scale_fill_gradient(low = "yellow", high = "red") +
xlab("\nlon") +
ylab("lat\n") +
xlim((min(Table$lon) - 0.001), (max(Table$lon) + 0.001)) +
ylim((min(Table$lat) - 0.002), (max(Table$lat) + 0.002)) +
guides(fill ="legend") +
theme_bw() +
theme (legend.position = "right") +
theme (axis.title.y = element_text(colour="black", size=18,
face="bold")) +
theme (axis.title.x = element_text(colour="black", size=18,
face="bold")) +
theme(strip.text.x = element_text(size=18, face="bold")) +
theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.border = element_rect(colour="black", linetype="solid"),
axis.line=element_line(size=0.5, colour="black",
linetype="solid")) +
theme(axis.text.x = element_text(angle=90, size=16, hjust=1, vjust=0.5,
colour = "black")) +
theme(axis.text.y = element_text(size = 16, colour = "black")) +
facet_wrap(~Spp)
Table <- All_data %>%
dplyr::group_by(Spp, location_name, Night, lat, lon) %>%
dplyr::count()
Table2 <- Table %>%
dplyr::group_by(Spp, location_name, lat, lon) %>%
dplyr::summarise(Median = median(n))
Table2 %>%
ggplot(aes(lon, lat)) +
geom_point(aes(x = lon, y = lat, size= Median, fill = Median),
colour = "black", pch = 21, position = position_jitter()) +
scale_size_area(max_size = 1) +
scale_fill_gradient(low = "yellow", high = "red") +
xlab("\nlon") +
ylab("lat\n") +
xlim((min(Table$lon) - 0.001), (max(Table$lon) + 0.001)) +
ylim((min(Table$lat) - 0.002), (max(Table$lat) + 0.002)) +
guides(fill ="legend") +
theme_bw() +
theme (legend.position = "right") +
theme (axis.title.y = element_text(colour="black", size=18,
face="bold")) +
theme (axis.title.x = element_text(colour="black", size=18,
face="bold")) +
theme(strip.text.x = element_text(size=18, face="bold")) +
theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.border = element_rect(colour="black", linetype="solid"),
axis.line=element_line(size=0.5, colour="black",
linetype="solid")) +
theme(axis.text.x = element_text(angle=90, size=16, hjust=1, vjust=0.5,
colour = "black")) +
theme(axis.text.y = element_text(size = 16, colour = "black")) +
facet_wrap(~Spp)
Table <- All_data %>%
dplyr::group_by(Spp, location_name, Night, lat, lon) %>%
dplyr::count()
Table2 <- Table %>%
dplyr::group_by(Spp, location_name, lat, lon) %>%
dplyr::summarise(Median = median(n))
Table2 %>%
ggplot(aes(lon, lat)) +
geom_point(aes(x = lon, y = lat, size= Median, fill = Median),
colour = "black", pch = 21, position = position_jitter()) +
scale_size_area(max_size = 10) +
scale_fill_gradient(low = "yellow", high = "red") +
xlab("\nlon") +
ylab("lat\n") +
xlim((min(Table$lon) - 0.001), (max(Table$lon) + 0.001)) +
ylim((min(Table$lat) - 0.002), (max(Table$lat) + 0.002)) +
guides(fill ="legend") +
theme_bw() +
theme (legend.position = "right") +
theme (axis.title.y = element_text(colour="black", size=18,
face="bold")) +
theme (axis.title.x = element_text(colour="black", size=18,
face="bold")) +
theme(strip.text.x = element_text(size=18, face="bold")) +
theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.border = element_rect(colour="black", linetype="solid"),
axis.line=element_line(size=0.5, colour="black",
linetype="solid")) +
theme(axis.text.x = element_text(angle=90, size=16, hjust=1, vjust=0.5,
colour = "black")) +
theme(axis.text.y = element_text(size = 16, colour = "black")) +
facet_wrap(~Spp)
Table <- All_data %>%
dplyr::group_by(Spp, location_name, Night, lat, lon) %>%
dplyr::count()
Table2 <- Table %>%
dplyr::group_by(Spp, location_name, lat, lon) %>%
dplyr::summarise(Median = median(n))
Table2 %>%
ggplot(aes(lon, lat)) +
geom_point(aes(x = lon, y = lat, size= Median, fill = Median),
colour = "black", pch = 21) +
scale_size_area(max_size = 10) +
scale_fill_gradient(low = "yellow", high = "red") +
xlab("\nlon") +
ylab("lat\n") +
xlim((min(Table$lon) - 0.001), (max(Table$lon) + 0.001)) +
ylim((min(Table$lat) - 0.002), (max(Table$lat) + 0.002)) +
guides(fill ="legend") +
theme_bw() +
theme (legend.position = "right") +
theme (axis.title.y = element_text(colour="black", size=18,
face="bold")) +
theme (axis.title.x = element_text(colour="black", size=18,
face="bold")) +
theme(strip.text.x = element_text(size=18, face="bold")) +
theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.border = element_rect(colour="black", linetype="solid"),
axis.line=element_line(size=0.5, colour="black",
linetype="solid")) +
theme(axis.text.x = element_text(angle=90, size=16, hjust=1, vjust=0.5,
colour = "black")) +
theme(axis.text.y = element_text(size = 16, colour = "black")) +
facet_wrap(~Spp)
# Table <- All_data %>%
#   group_by(Spp, location_name, Night, lat, lon) %>%
#   count() %>%
#   ungroup() %>%
#   group_by(Spp, location_name, lat, lon) %>%
#   filter(n == max(n))
Table2 <- All_data %>%
dplyr::group_by(Spp, location_name, Night, lat, lon) %>%
dplyr::count() %>%
dplyr::ungroup() %>%
dplyr::group_by(Spp, location_name, lat, lon) %>%
dplyr::top_n(1) %>%
dplyr::filter(row_number()==1)
Table2 %>%
ggplot(aes(lon, lat)) +
geom_point(aes(x = lon, y = lat, size=n, fill = n),
colour = "black", pch = 21) +
scale_size_area(max_size = 10) +
scale_fill_gradient(low = "yellow", high = "red") +
# borders(reg="UK", colour = "white", fill="#7f7f7f", alpha=1/4) +
xlab("\nlon") +
ylab("lat\n") +
xlim((min(Table$lon) - 0.001), (max(Table$lon) + 0.001)) +
ylim((min(Table$lat) - 0.002), (max(Table$lat) + 0.002)) +
guides(fill ="legend") +
theme_bw() +
theme (legend.position = "right") +
theme (axis.title.y = element_text(colour="black", size=18,
face="bold")) +
theme (axis.title.x = element_text(colour="black", size=18,
face="bold")) +
theme(strip.text.x = element_text(size=18, face="bold")) +
theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.border = element_rect(colour="black", linetype="solid"),
axis.line=element_line(size=0.5, colour="black",
linetype="solid")) +
theme(axis.text.x = element_text(angle=90, size=16, hjust=1, vjust=0.5,
colour = "black")) +
theme(axis.text.y = element_text(size = 16, colour = "black")) +
facet_wrap(~Spp)
View(All_data)
Effort <- All_data %>%
arrange(location_name, Night) %>%
group_by(location_name, Night) %>%
filter(row_number()==1) %>%
ungroup() %>%
select(location_name, Night) %>%
group_by(location_name) %>%
mutate(diff_days = round(as.numeric(difftime(Night, lag(Night), units='days')), digits = 1)) %>%
replace(is.na(.), 0) %>%
mutate(start = if_else(diff_days == 0 | diff_days > 1, paste(as.Date(Night)), "")) %>%
mutate(end = if_else(start != "", paste(lag(as.Date(Night))), "")) %>%
filter(start != "" & end != "") %>%
mutate_at(c("end"), funs(lead), n=1) %>%
replace(is.na(.), 0) %>%
mutate_at(c("end"), funs(ifelse(. == 0, paste(as.Date(start)), .)))
Effort$start <- as.Date(Effort$start)
Effort$end <- as.Date(Effort$end)
Effort %>%
ggplot() +
geom_segment(aes(x=start, xend=end, y=location_name, yend=location_name), size = 6) +
xlab("\nDate") +
ylab("Detector ID\n") +
scale_x_date(date_labels = "%b %d") +
theme_bw() +
theme(legend.position = "none") +
theme (axis.title.y = element_text(colour="black", size=16,
face="bold")) +
theme (axis.title.x = element_text(colour="black", size=16,
face="bold")) +
theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.border = element_rect(colour="black", linetype="solid"),
axis.line=element_line(size=0.5, colour="black",
linetype="solid")) +
theme(axis.text.x = element_text(size=14, hjust=1, vjust=0.5,
colour = "black", angle = 90)) +
theme(axis.text.y = element_text(size = 14, colour = "black")) +
theme(legend.text=element_text(size=14)) +
theme(legend.title=element_text(size=16))
View(Effort)
runApp('//smbhome.uscs.susx.ac.uk/brs28/Desktop/MammalSociety/Ecobat/Ecobat/Nightly/App-1')
View(All_data)
