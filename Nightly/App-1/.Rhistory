theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.border = element_rect(colour="black", linetype="solid"),
axis.line=element_line(size=0.5, colour="black",
linetype="solid")) +
theme(axis.text.x = element_text(size=16, hjust=0.5, vjust=1,
colour = "black")) +
theme(axis.text.y = element_text(size = 16, colour = "black")) +
ggtitle(i) +
theme(plot.title = element_text(face = "bold.italic", size = 22)) +
theme(legend.position="none"))
# guides(fill=guide_legend(title="Detector ID")) +
# theme(legend.text=element_text(size=18)) +
# theme(legend.title=element_text(size=20)))
#
}
Night_month <- df %>%
dplyr::group_by(Spp, Night, Month, location_name) %>%
dplyr::summarise(n = sum(passes))
for (i in unique(All_data$Spp)) {
new <- Night_month %>%
dplyr::filter(Spp == i)
print(new %>%
ggplot2::ggplot(aes(Month, n, fill=location_name)) +
geom_boxplot(aes(fill=location_name)) +
{if (length(unique(new$location_name))>1)scale_fill_brewer(palette = "RdBu")}+
ylab("Bat passes per night\n") +
xlab("\nMonth") +
{if (max(new$n) <=5)ylim(-3,5)} +
{if (max(new$n) > 5 & max(new$n) <=10)ylim(-3,10)} +
{if (max(new$n) > 10 & max(new$n) <=20)ylim(-3,20)} +
{if (max(new$n) > 20 & max(new$n) <=50)ylim(-3,50)} +
{if (max(new$n) > 50 & max(new$n) <=100)ylim(-3,100)} +
{if (max(new$n) > 100 & max(new$n) <=200)ylim(-3,200)} +
{if (max(new$n) > 200 & max(new$n) <=300)ylim(-3,300)} +
{if (max(new$n) > 300 & max(new$n) <=500)ylim(-3,500)} +
{if (max(new$n) > 500 & max(new$n) <=1000)ylim(-3,1000)} +
geom_text(aes(y=-2), x=Month, label=location_name, group=location_name),
position=position_dodge(0.8), size=4) +
theme_bw() +
theme (axis.title.y = element_text(colour="black", size=18,
face="bold")) +
theme (axis.title.x = element_text(colour="black", size=18,
face="bold")) +
theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.border = element_rect(colour="black", linetype="solid"),
axis.line=element_line(size=0.5, colour="black",
linetype="solid")) +
theme(axis.text.x = element_text(size=16, hjust=0.5, vjust=1,
colour = "black")) +
theme(axis.text.y = element_text(size = 16, colour = "black")) +
ggtitle(i) +
theme(plot.title = element_text(face = "bold.italic", size = 22)) +
theme(legend.position="none"))
Night_month <- df %>%
dplyr::group_by(Spp, Night, Month, location_name) %>%
dplyr::summarise(n = sum(passes))
for (i in unique(All_data$Spp)) {
new <- Night_month %>%
dplyr::filter(Spp == i)
print(new %>%
ggplot2::ggplot(aes(Month, n, fill=location_name)) +
geom_boxplot(aes(fill=location_name)) +
{if (length(unique(new$location_name))>1)scale_fill_brewer(palette = "RdBu")}+
ylab("Bat passes per night\n") +
xlab("\nMonth") +
{if (max(new$n) <=5)ylim(-3,5)} +
{if (max(new$n) > 5 & max(new$n) <=10)ylim(-3,10)} +
{if (max(new$n) > 10 & max(new$n) <=20)ylim(-3,20)} +
{if (max(new$n) > 20 & max(new$n) <=50)ylim(-3,50)} +
{if (max(new$n) > 50 & max(new$n) <=100)ylim(-3,100)} +
{if (max(new$n) > 100 & max(new$n) <=200)ylim(-3,200)} +
{if (max(new$n) > 200 & max(new$n) <=300)ylim(-3,300)} +
{if (max(new$n) > 300 & max(new$n) <=500)ylim(-3,500)} +
{if (max(new$n) > 500 & max(new$n) <=1000)ylim(-3,1000)} +
geom_text(aes(y=-2, x=Month, label=location_name, group=location_name),
position=position_dodge(0.8), size=4) +
theme_bw() +
theme (axis.title.y = element_text(colour="black", size=18,
face="bold")) +
theme (axis.title.x = element_text(colour="black", size=18,
face="bold")) +
theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.border = element_rect(colour="black", linetype="solid"),
axis.line=element_line(size=0.5, colour="black",
linetype="solid")) +
theme(axis.text.x = element_text(size=16, hjust=0.5, vjust=1,
colour = "black")) +
theme(axis.text.y = element_text(size = 16, colour = "black")) +
ggtitle(i) +
theme(plot.title = element_text(face = "bold.italic", size = 22)) +
theme(legend.position="none"))
}
print(new %>%
ggplot2::ggplot(aes(Month, n, fill=location_name)) +
geom_boxplot(aes(fill=location_name)) +
{if (length(unique(new$location_name))>1)scale_fill_brewer(palette = "RdBu")}+
ylab("Bat passes per night\n") +
xlab("\nMonth") +
{if (max(new$n) <=5)ylim(-3,5)} +
{if (max(new$n) > 5 & max(new$n) <=10)ylim(-3,10)} +
{if (max(new$n) > 10 & max(new$n) <=20)ylim(-3,20)} +
{if (max(new$n) > 20 & max(new$n) <=50)ylim(-3,50)} +
{if (max(new$n) > 50 & max(new$n) <=100)ylim(-3,100)} +
{if (max(new$n) > 100 & max(new$n) <=200)ylim(-3,200)} +
{if (max(new$n) > 200 & max(new$n) <=300)ylim(-3,300)} +
{if (max(new$n) > 300 & max(new$n) <=500)ylim(-3,500)} +
{if (max(new$n) > 500 & max(new$n) <=1000)ylim(-3,1000)} +
#geom_text(aes(y=-2, x=Month, label=location_name, group=location_name),
#position=position_dodge(0.8), size=4) +
stat_summary(geom = 'text', label = location_name, fun.y = max, vjust = -1) +
theme_bw() +
theme (axis.title.y = element_text(colour="black", size=18,
face="bold")) +
theme (axis.title.x = element_text(colour="black", size=18,
face="bold")) +
theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.border = element_rect(colour="black", linetype="solid"),
axis.line=element_line(size=0.5, colour="black",
linetype="solid")) +
theme(axis.text.x = element_text(size=16, hjust=0.5, vjust=1,
colour = "black")) +
theme(axis.text.y = element_text(size = 16, colour = "black")) +
ggtitle(i) +
theme(plot.title = element_text(face = "bold.italic", size = 22)) +
theme(legend.position="none"))
Night_month <- df %>%
dplyr::group_by(Spp, Night, Month, location_name) %>%
dplyr::summarise(n = sum(passes))
for (i in unique(All_data$Spp)) {
new <- Night_month %>%
dplyr::filter(Spp == i)
print(new %>%
ggplot2::ggplot(aes(Month, n, fill=location_name)) +
geom_boxplot(aes(fill=location_name)) +
{if (length(unique(new$location_name))>1)scale_fill_brewer(palette = "RdBu")}+
ylab("Bat passes per night\n") +
xlab("\nMonth") +
{if (max(new$n) <=5)ylim(-3,5)} +
{if (max(new$n) > 5 & max(new$n) <=10)ylim(-3,10)} +
{if (max(new$n) > 10 & max(new$n) <=20)ylim(-3,20)} +
{if (max(new$n) > 20 & max(new$n) <=50)ylim(-3,50)} +
{if (max(new$n) > 50 & max(new$n) <=100)ylim(-3,100)} +
{if (max(new$n) > 100 & max(new$n) <=200)ylim(-3,200)} +
{if (max(new$n) > 200 & max(new$n) <=300)ylim(-3,300)} +
{if (max(new$n) > 300 & max(new$n) <=500)ylim(-3,500)} +
{if (max(new$n) > 500 & max(new$n) <=1000)ylim(-3,1000)} +
geom_text(aes(y=-2, x=Month, label=location_name, group=location_name),
position=position_dodge(0.8), size=4) +
theme_bw() +
theme (axis.title.y = element_text(colour="black", size=18,
face="bold")) +
theme (axis.title.x = element_text(colour="black", size=18,
face="bold")) +
theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.border = element_rect(colour="black", linetype="solid"),
axis.line=element_line(size=0.5, colour="black",
linetype="solid")) +
theme(axis.text.x = element_text(size=16, hjust=0.5, vjust=1,
colour = "black")) +
theme(axis.text.y = element_text(size = 16, colour = "black")) +
ggtitle(i) +
theme(plot.title = element_text(face = "bold.italic", size = 22)) +
theme(legend.position="none"))
}
Table <- All_data %>%
dplyr::group_by(Spp, location_name, post_set_hr_int) %>%
dplyr::count() %>%
spread(post_set_hr_int, n) %>%
replace(is.na(.), 0) %>%
dplyr::rename("species" = Spp, "Detector ID" = location_name)
Table2 <- df %>%
dplyr::group_by(Spp, location_name, post_set_hr_int) %>%
dplyr::summarise(n = sum(passes)) %>%
spread(post_set_hr_int, n) %>%
replace(is.na(.), 0) %>%
dplyr::rename("species" = Spp, "Detector ID" = location_name)
View(Table2)
Table <- df %>%
dplyr::group_by(Spp, location_name, post_set_hr_int) %>%
dplyr::summarise(n = sum(passes)) %>%
spread(post_set_hr_int, n) %>%
replace(is.na(.), 0) %>%
dplyr::rename("Species" = Spp, "Detector ID" = location_name)
# simple table
knitr::kable(Table)
for (i in unique(All_data$Spp)) {
print(All_data %>%
dplyr::filter(Spp == i) %>%
ggplot(aes(Night, post_set_min)) +
stat_density2d(aes(alpha = ..level.., fill =..level..), geom="polygon") +
scale_fill_gradient(low = "yellow", high = "red") +
geom_point(size=2, alpha = 0.5) +
geom_line(data = sun_data, aes(Night, night_length_min),
linetype = "dashed", colour = "red") +
xlab("\nDate") +
ylab("Minutes after sunset\n") +
theme_bw() +
theme (legend.position = "none") +
theme (axis.title.y = element_text(colour="black", size=18,
face="bold")) +
theme (axis.title.x = element_text(colour="black", size=18,
face="bold")) +
theme(strip.text.x = element_text(size=18, face="bold")) +
theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.border = element_rect(colour="black", linetype="solid"),
axis.line=element_line(size=0.5, colour="black",
linetype="solid")) +
theme(axis.text.x = element_text(angle=90, size=16, hjust=1, vjust=0.5,
colour = "black")) +
theme(axis.text.y = element_text(size = 16, colour = "black")) +
facet_wrap(location_name~.) +
ggtitle(i) +
theme(plot.title = element_text(face = "bold.italic", size = 18)))
}
#position = position_jitter(w = 1, h = 0)) +
Table <- All_data %>%
dplyr::group_by(Spp, location_name, post_set_hr_int) %>%
dplyr::count() %>%
spread(post_set_hr_int, n) %>%
replace(is.na(.), 0)
Table2 <- reshape2::melt(Table, id.vars = c("Spp", "location_name"))
Table3 <- Table2 %>%
dplyr::rename(ss_hr = variable, Passes = value) %>%
dplyr::arrange(Spp, location_name, ss_hr) %>%
dplyr::group_by(Spp, location_name) %>%
dplyr::mutate(cs = cumsum(Passes))
View(Table3)
Table <- df %>%
dplyr::group_by(Spp, location_name, post_set_hr_int) %>%
dplyr::summarise(n = sum(passes)) %>%
spread(post_set_hr_int, n) %>%
replace(is.na(.), 0)
Table2 <- reshape2::melt(Table, id.vars = c("Spp", "location_name"))
Table3 <- Table2 %>%
dplyr::rename(ss_hr = variable, Passes = value) %>%
dplyr::arrange(Spp, location_name, ss_hr) %>%
dplyr::group_by(Spp, location_name) %>%
dplyr::mutate(cs = cumsum(Passes))
Table <- df %>%
dplyr::group_by(Spp, location_name, post_set_hr_int) %>%
dplyr::summarise(n = sum(passes)) %>%
spread(post_set_hr_int, n) %>%
replace(is.na(.), 0)
Table2 <- reshape2::melt(Table, id.vars = c("Spp", "location_name"))
Table3 <- Table2 %>%
dplyr::rename(ss_hr = variable, Passes = value) %>%
dplyr::arrange(Spp, location_name, ss_hr) %>%
dplyr::group_by(Spp, location_name) %>%
dplyr::mutate(cs = cumsum(Passes))
for (i in (unique(All_data$Spp))) {
print(Table3 %>%
dplyr::filter(Spp == i) %>%
ggplot(aes(x = ss_hr, y = cs, group =1)) +
geom_point() +
geom_line() +
xlab("\nHours after Sunset") +
ylab("Total number of passes\n") +
scale_color_brewer(palette = "RdBu") +
theme_bw() +
theme (axis.title.y = element_text(colour="black", size=22,
face="bold")) +
theme (axis.title.x = element_text(colour="black", size=22,
face="bold")) +
theme(strip.text.x = element_text(size=22, face="bold")) +
theme(axis.text.x = element_text(size=20, colour = "black")) +
theme(axis.text.y = element_text(size = 20, colour = "black")) +
facet_wrap(~location_name) +
ggtitle(i) +
theme(plot.title = element_text(face = "bold.italic", size = 22))
)
}
Detectors <- All_data %>%
dplyr::group_by(location_name, lat, lon) %>%
dplyr::count()
View(Detectors)
Detectors2 <- df %>%
dplyr::group_by(location_name, lat, lon) %>%
dplyr::summarise(n = sum(passes))
View(Detectors2)
Detectors2 <- df %>%
dplyr::group_by(location_name, lat, lon) %>%
dplyr::summarise(n = sum(passes))
Detectors %>%
ggplot(aes(x=lon, y=lat)) +
geom_point(aes(x=lon, y=lat), fill = "black", colour = "white") +
geom_text(aes(x=lon, y=lat, label=location_name), size=10) +
xlab("\nlon") +
ylab("lat\n") +
xlim((min(Detectors$lon) - 0.001), (max(Detectors$lon) + 0.001)) +
ylim((min(Detectors$lat) - 0.002), (max(Detectors$lat) + 0.002)) +
guides(fill ="legend") +
theme_bw() +
theme (legend.position = "right") +
theme (axis.title.y = element_text(colour="black", size=18,
face="bold")) +
theme (axis.title.x = element_text(colour="black", size=18,
face="bold")) +
theme(strip.text.x = element_text(size=18, face="bold")) +
theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.border = element_rect(colour="black", linetype="solid"),
axis.line=element_line(size=0.5, colour="black",
linetype="solid")) +
theme(axis.text.x = element_text(angle=90, size=16, hjust=1, vjust=0.5,
colour = "black")) +
theme(axis.text.y = element_text(size = 16, colour = "black"))
Table <- df %>%
dplyr::group_by(Spp, location_name, Night, lat, lon) %>%
dplyr::summarise(n = sum(passes))
Table2 <- Table %>%
dplyr::group_by(Spp, location_name, lat, lon) %>%
dplyr::summarise(Median = median(n))
Table2 %>%
ggplot(aes(lon, lat)) +
geom_point(aes(x = lon, y = lat, size= Median, fill = Median),
colour = "black", pch = 21) +
scale_size_area(max_size = 10) +
scale_fill_gradient(low = "yellow", high = "red") +
xlab("\nlon") +
ylab("lat\n") +
xlim((min(Table$lon) - 0.001), (max(Table$lon) + 0.001)) +
ylim((min(Table$lat) - 0.002), (max(Table$lat) + 0.002)) +
guides(fill ="legend") +
theme_bw() +
theme (legend.position = "right") +
theme (axis.title.y = element_text(colour="black", size=18,
face="bold")) +
theme (axis.title.x = element_text(colour="black", size=18,
face="bold")) +
theme(strip.text.x = element_text(size=18, face="bold")) +
theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.border = element_rect(colour="black", linetype="solid"),
axis.line=element_line(size=0.5, colour="black",
linetype="solid")) +
theme(axis.text.x = element_text(angle=90, size=16, hjust=1, vjust=0.5,
colour = "black")) +
theme(axis.text.y = element_text(size = 16, colour = "black")) +
facet_wrap(~Spp)
Table2 <- df %>%
dplyr::group_by(Spp, location_name, Night, lat, lon) %>%
dplyr::summarise(n = sum(passes)) %>%
dplyr::ungroup() %>%
dplyr::group_by(Spp, location_name, lat, lon) %>%
dplyr::top_n(1) %>%
dplyr::filter(row_number()==1)
Table2 %>%
ggplot(aes(lon, lat)) +
geom_point(aes(x = lon, y = lat, size=n, fill = n),
colour = "black", pch = 21) +
scale_size_area(max_size = 10) +
scale_fill_gradient(low = "yellow", high = "red") +
# borders(reg="UK", colour = "white", fill="#7f7f7f", alpha=1/4) +
xlab("\nlon") +
ylab("lat\n") +
xlim((min(Table$lon) - 0.001), (max(Table$lon) + 0.001)) +
ylim((min(Table$lat) - 0.002), (max(Table$lat) + 0.002)) +
guides(fill ="legend") +
theme_bw() +
theme (legend.position = "right") +
theme (axis.title.y = element_text(colour="black", size=18,
face="bold")) +
theme (axis.title.x = element_text(colour="black", size=18,
face="bold")) +
theme(strip.text.x = element_text(size=18, face="bold")) +
theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.border = element_rect(colour="black", linetype="solid"),
axis.line=element_line(size=0.5, colour="black",
linetype="solid")) +
theme(axis.text.x = element_text(angle=90, size=16, hjust=1, vjust=0.5,
colour = "black")) +
theme(axis.text.y = element_text(size = 16, colour = "black")) +
facet_wrap(~Spp)
Table <- All_data %>%
dplyr::filter(post_set_min <= upper) %>%
dplyr::group_by(Night, Spp, location_name) %>%
dplyr::count() %>%
spread(Night, n) %>%
dplyr::arrange(Spp, location_name) %>%
dplyr::rename("Detector ID" = location_name) %>%
dplyr::rename("species" = Spp)
Table <- All_data %>%
dplyr::filter(post_set_min <= upper) %>%
dplyr::group_by(Night, Spp, location_name) %>%
dplyr::count() %>%
spread(Night, n) %>%
dplyr::arrange(Spp, location_name) %>%
dplyr::rename("Detector ID" = location_name) %>%
dplyr::rename("species" = Spp)
# Make all NA's = 0
Table[is.na(Table)] <- 0
# simple table
results='asis'
panderOptions('table.split.table', 100)
pander(Table, style = "multiline", justify = "left")
Table <- df %>%
dplyr::filter(post_set_min <= upper) %>%
dplyr::group_by(Night, Spp, location_name) %>%
dplyr::summarise(n = sum(passes)) %>%
spread(Night, n) %>%
dplyr::arrange(Spp, location_name) %>%
dplyr::rename("Detector ID" = location_name) %>%
dplyr::rename("species" = Spp)
# Make all NA's = 0
Table[is.na(Table)] <- 0
# simple table
results='asis'
panderOptions('table.split.table', 100)
pander(Table, style = "multiline", justify = "left")
for (i in seq_len(length(unique(All_data$location_name)))) {
print(ggplot(All_data, aes(x=post_set_min, y=Spp, colour=Spp)) +
geom_segment(aes(x=lower, xend=upper, y=Spp, yend=Spp),
size = 25, colour="grey") +
geom_point(size=5, alpha=0.7,  position = position_jitter(height = 0.3)) +
xlab("\nTime after sunset (mins)") +
scale_x_continuous(breaks=c(-15, 0, 15, 30, 45, 60, 75, 90),
limits = c(-15, 90)) +
geom_hline(yintercept = c(seq_len(length(Spp_list)-1) + 0.5),
colour = "black", linetype = "dotted") +
scale_y_discrete(drop=TRUE) +
scale_colour_brewer(palette = "Paired") +
theme_bw() +
theme(legend.position = "none") +
theme(plot.caption = element_text(colour = "black", size = 34)) +
theme(strip.text.x = element_text(size=34, face="bold")) +
theme(axis.title.y = element_blank()) +
theme(axis.title.x = element_text(colour = "black", size = 34,
face = "bold")) +
theme(axis.text.x = element_text(size = 28, hjust=0.5, vjust=1,
colour = "black",
face = "bold")) +
theme(axis.text.y = element_text(size = 28, colour = "black",
face = "bold")) +
theme(panel.background = element_rect(fill = "white")) +
theme(panel.grid.major.x = element_line(colour = "black",
linetype = "dotted"),
panel.grid.minor.x = element_blank(),
panel.grid.major.y = element_blank(),
panel.grid.minor.y = element_blank()) +
theme (axis.ticks = element_blank()) +
facet_wrap_paginate(~location_name, ncol=1, nrow=1, page=i))
}
# adding a column for Day-Month to be used to see if maternity period is included or not
sun_data$month <- lubridate::month(sun_data$Night, label = TRUE)
sun_data$nday <- lubridate::day(sun_data$Night)
sun_data$Day <- paste(sun_data$nday, sun_data$month, sep = "-")
# also add this to All_data - WILL ADD CURRENT YEAR AS YEAR SO NEEDS CHANGING IN GGPLOT CODE BELOW AT THE TURN OF EACH NEW YEAR
All_data$month <- lubridate::month(All_data$Night)
All_data$nday <- lubridate::day(All_data$Night)
All_data$Day <- as.Date(paste(All_data$nday, All_data$month, sep = "-"), format = "%d-%m")
if ((is.element("15-Jun", sun_data$Day) == TRUE) || (is.element("30-Jul", sun_data$Day) == TRUE)) {
Maternity <- All_data %>%
dplyr::filter(Day >= "2019-06-15" & Day <= "2019-07-30") %>%
dplyr::filter(post_set_min <= upper) %>%
dplyr::group_by(Night, Spp, location_name) %>%
dplyr::count() %>%
spread(Night, n) %>%
dplyr::arrange(Spp, location_name) %>%
dplyr::rename("Detector ID" = location_name) %>%
dplyr::rename("species" = Spp) %>%
replace(is.na(.), 0)
}
if (exists("Maternity") == TRUE & nrow(Maternity) > 1) {
results='asis'
panderOptions('table.split.table', 100)
pander(Maternity, style = "multiline", justify = "left")
}
if ((is.element("15-Jun", sun_data$Day) == TRUE) || (is.element("30-Jul", sun_data$Day) == TRUE)) {
for (i in seq_len(length(unique(All_data$location_name)))) {
print(All_data %>%
dplyr::filter(Day >= "2019-06-15" & Day <= "2019-07-30") %>% #NEEDS CHANGING EACH YEAR!
ggplot(aes(x=post_set_min, y=Spp, colour=Spp)) +
geom_segment(aes(x=lower, xend=upper, y=Spp, yend=Spp),
size = 25, colour="grey") +
geom_point(size=5, alpha=0.7,  position = position_jitter(height = 0.3)) +
xlab("\nTime after sunset (mins)") +
scale_x_continuous(breaks=c(-15, 0, 15, 30, 45, 60, 75, 90),
limits = c(-15, 90)) +
geom_hline(yintercept = c(seq_len(length(Spp_list)-1) + 0.5),
colour = "black", linetype = "dotted") +
scale_y_discrete(drop=TRUE) +
scale_colour_brewer(palette = "Paired") +
theme_bw() +
theme(legend.position = "none") +
theme(plot.caption = element_text(colour = "black", size = 34)) +
theme(strip.text.x = element_text(size=34, face="bold")) +
theme(axis.title.y = element_blank()) +
theme(axis.title.x = element_text(colour = "black", size = 34,
face = "bold")) +
theme(axis.text.x = element_text(size = 28, hjust=0.5, vjust=1,
colour = "black",
face = "bold")) +
theme(axis.text.y = element_text(size = 28, colour = "black",
face = "bold")) +
theme(panel.background = element_rect(fill = "white")) +
theme(panel.grid.major.x = element_line(colour = "black",
linetype = "dotted"),
panel.grid.minor.x = element_blank(),
panel.grid.major.y = element_blank(),
panel.grid.minor.y = element_blank()) +
theme (axis.ticks = element_blank()) +
facet_wrap_paginate(~location_name, ncol=1, nrow=1, page=i))
}
}
shiny::runApp('//smbhome.uscs.susx.ac.uk/brs28/Desktop/MammalSociety/Ecobat/Ecobat/Nightly/App-1')
