scale_fill_gradient(low = "yellow", high = "red") +
geom_point(size=2, alpha = 0.5) +
geom_line(data = sun_data, aes(Night, night_length_min),
linetype = "dashed", colour = "red") +
xlab("\nDate") +
ylab("Minutes after sunset\n") +
theme_bw() +
theme (legend.position = "none") +
theme (axis.title.y = element_text(colour="black", size=18,
face="bold")) +
theme (axis.title.x = element_text(colour="black", size=18,
face="bold")) +
theme(strip.text.x = element_text(size=18, face="bold")) +
theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.border = element_rect(colour="black", linetype="solid"),
axis.line=element_line(size=0.5, colour="black",
linetype="solid")) +
theme(axis.text.x = element_text(angle=90, size=16, hjust=1, vjust=0.5,
colour = "black")) +
theme(axis.text.y = element_text(size = 16, colour = "black")) +
facet_wrap(location_name~.) +
ggtitle("Noctules + Leisler's\n") +
theme(plot.title = element_text(face = "bold.italic", size = 18))
plot.noc.leis
plot.noc.leis <-       All_data %>%
dplyr::filter(Spp == "Leisler's" | Spp == "Noctule") %>%
ggplot(aes(Night, post_set_min)) +
stat_density2d(aes(alpha = ..level.., fill =..level..), geom="polygon") +
scale_fill_gradient(low = "yellow", high = "red") +
geom_point(size=2, alpha = 0.5) +
geom_line(data = sun_data, aes(Night, night_length_min),
linetype = "dashed", colour = "red") +
xlab("\nDate") +
ylab("Minutes after sunset\n") +
theme_bw() +
theme (legend.position = "none") +
theme (axis.title.y = element_text(colour="black", size=18,
face="bold")) +
theme (axis.title.x = element_text(colour="black", size=18,
face="bold")) +
theme(strip.text.x = element_text(size=18, face="bold")) +
theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.border = element_rect(colour="black", linetype="solid"),
axis.line=element_line(size=0.5, colour="black",
linetype="solid")) +
theme(axis.text.x = element_text(angle=90, size=16, hjust=1, vjust=0.5,
colour = "black")) +
theme(axis.text.y = element_text(size = 16, colour = "black")) +
facet_wrap(location_name~.) +
ggtitle("Nyctalus noctula & Nyctalus leisleri\n") +
theme(plot.title = element_text(face = "bold.italic", size = 18))
plot.noc.leis
library(dplyr)
library(secr)
# x, y co-ords of trapping grid based on distance between points
grid_A <- make.grid(nx = 5, ny = 5, spacing = 15, detector = 'single',
ID = 'numx')
#write.csv(grid_A, file = "grid_A.csv")
plot(grid_A, label = TRUE, border = 10)
getwd()
library(dplyr)
getwd()
getwd()
# load in packages
library(tidyr)
library(dplyr)
# load in data
df<- read.csv("../Data/AllCaptures.csv") # captures data
df2 <- read.csv("../Data/Site_summary.csv") # supplementary site info
# assign a value for the area trapped in
# for us this is 5 x 5 grid, 15m apart = 60x60m = 0.36ha
ha <- 0.36
# assign area with 10m buffer around = 70x70m = 0.49ha
ha_buffer <- 0.49
# calculate densities in individuals/ha - no buffer
df_individs <- df %>%
mutate_if(is.factor, as.character) %>%
drop_na(Species) %>%
group_by(Session_ID, Species) %>%
count(N.R) %>%
rename(n_individs = n) %>%
mutate(density_individs = round(n_individs/ha, digits = 1)) %>%
mutate(density_individs_buffer = round(n_individs/ha_buffer, digits = 1)) %>%
filter(N.R == "N")
# calculate densities of captures/ha - no buffer
df_captures <- df %>%
mutate_if(is.factor, as.character) %>%
drop_na(Species) %>%
group_by(Session_ID, Species) %>%
count(Species) %>%
rename(n_capts = n) %>%
mutate(density_capts = round(n_capts/ha, digits = 1)) %>%
mutate(density_capts_buffer = round(n_capts/ha_buffer, digits = 1))
# new df joining the above results together
df_new <- left_join(df_individs, df_captures, by = c("Session_ID", "Species")) %>%
select(-N.R)
# add in the secr data and Schumacker-Eschmeyer results
df_secr <- read.csv("../Results/secr.csv")
df_schesch <- read.csv("../Results/Schumacker_Eschmeyer.csv")
# add secr results in by session and species
df_new2 <- left_join(df_new, df_secr, by = c("Session_ID", "Species"))
df_new3 <- left_join(df_new2, df_schesch, by = c("Session_ID", "Species"))
# add the supplementary site data to the new df of densities and save as a csv
df_summary <- left_join(df_new3, df2, by = "Session_ID")
write.csv(df_summary, file = "../Results/Density_summary.csv")
# simply for comparison
df_summary2 <- df_summary %>%
select(Session_ID, Species, woodland, d_edge, density_individs,
density_individs_buffer, density_capts, density_capts_buffer,
Density_ha_buffer_SchEsch, L_CI_dens_SchEsch, U_CI_dens_SchEsch,
Density_ha_secr, L_CI__secr, U_CI__secr, notes)
write.csv(df_summary2, file = "../Results/Density_comps.csv")
getwd()
library(dplyr)
df <- read.csv("//smbhome.uscs.susx.ac.uk/brs28/Downloads/Buckfastleigh_Master_Spreadsheet.csv")
df <- read.csv("//smbhome.uscs.susx.ac.uk/brs28/Downloads/Buckfastleigh_Master_Spreadsheet.csv")
View(df)
df <- df %>%
select(Site, DATE, MANUAL.ID)
test <- df %>%
separate(MANUAL.ID, " ")
library(dplyr)
test <- df %>%
separate(MANUAL.ID, " ")
library(tidyr)
test <- df %>%
separate(MANUAL.ID, " ")
View(test)
View(df)
test <- df %>%
separate(MANUAL.ID, " ", fill = "right")
View(test)
test <- df %>%
separate(MANUAL.ID, c("v1", "v2"))
View(test)
View(test)
test2 <- test %>%
gather("v1", "v2")
View(test2)
test2 <- test %>%
gather("Species", c("v1", "v1"))
test2 <- gather(test,
key = "Site",
value = "Species",
v1, v2)
View(test2)
test2 <- gather(test,
key = "variable",
value = "Species")
View(test2)
test2 <- gather(test,
key = "variable",
value = "Species",
-Site, - DATE)
df <- read.csv("//smbhome.uscs.susx.ac.uk/brs28/Downloads/Buckfastleigh_Master_Spreadsheet.csv")
length(unique(df$IN.FILE))
df2 <- df %>%
select(Site, DATE, MANUAL.ID)
test <- df2 %>%
separate(MANUAL.ID, c("v1", "v2"))
test <- df2 %>%
separate(MANUAL.ID, c("v1", "v2", "v3", "v4", "v5"))
test <- df2 %>%
separate(MANUAL.ID, c("v1", "v2", "v3", "v4", "v5", "v6", "v7"))
test <- df2 %>%
separate(MANUAL.ID, c("v1", "v2", "v3", "v4", "v5", "v6", "v7",
"v8", "v9"))
View(df2)
test <- df2 %>%
separate(MANUAL.ID, into = paste("v", 1:12, sep = " "))
test <- df2 %>%
separate(MANUAL.ID, into = paste("v", 1:15, sep = " "))
test <- df2 %>%
separate(MANUAL.ID, into = paste("v", 1:20, sep = " "))
test <- df2 %>%
separate(MANUAL.ID, into = paste("v", 1:21, sep = " "))
test <- df2 %>%
separate(MANUAL.ID, into = paste("v", 1:22, sep = " "))
test <- df2 %>%
separate(MANUAL.ID, into = paste("v", 1:25, sep = " "))
test <- df2 %>%
separate(MANUAL.ID, into = paste("v", 1:26, sep = " "))
test <- df2 %>%
separate(MANUAL.ID, into = paste("v", 1:27, sep = " "))
test <- df2 %>%
separate(MANUAL.ID, into = paste("v", 1:30, sep = " "))
test <- df2 %>%
separate(MANUAL.ID, into = paste("v", 1:35, sep = " "))
test <- df2 %>%
separate(MANUAL.ID, into = paste("v", 1:34, sep = " "))
test <- df2 %>%
separate(MANUAL.ID, into = paste("v", 1:33, sep = " "))
test <- df2 %>%
separate(MANUAL.ID, into = paste("v", 1:32, sep = " "))
test <- df2 %>%
separate(MANUAL.ID, into = paste("v", 1:30, sep = " "))
test <- df2 %>%
separate(MANUAL.ID, into = paste("v", 1:31, sep = " "))
test <- df2 %>%
separate(MANUAL.ID, into = paste("v", 1:32, sep = " "))
length(unique(df$OUT.FILE))
df2 <- df %>%
select(OUT.FILE, MANUAL.ID)
test <- df2 %>%
separate(MANUAL.ID, into = paste("v", 1:32, sep = " "))
test <- df2 %>%
separate(MANUAL.ID, into = paste("v", 1:33, sep = " "))
test <- df2 %>%
separate(MANUAL.ID, into = paste("v", 1:32, sep = " "))
test <- df2 %>%
separate(MANUAL.ID, into = paste("v", 1:33, sep = " "))
test2 <- gather(test,
key = "variable",
value = "Species")
df2 <- df %>%
select(DATE, Site, MANUAL.ID)
test <- df2 %>%
separate(MANUAL.ID, into = paste("v", 1:32, sep = " "))
test2 <- gather(test,
key = "variable",
value = "Species",
-Site, - DATE)
df2 <- df %>%
select(DATE.12, Site.Number, TIME.12, MANUAL.ID)
test <- df2 %>%
separate(MANUAL.ID, into = paste("v", 1:32, sep = " "))
test2 <- gather(test,
key = "variable",
value = "Species",
-Site.Number, -DATE.12, -TIME.12)
test2 <- gather(test,
key = "variable",
value = "Species",
-Site.Number, -DATE.12, -TIME.12,
na.rm = TRUE)
test2 <- gather(test,
key = "variable",
value = "Species",
-Site.Number, -DATE.12, -TIME.12,
na.rm = TRUE)
View(test2)
test2 <- gather(test,
key = "variable",
value = "Species",
-Site.Number, -DATE.12, -TIME.12)
test3 <- test2 %>%
filter(Species != "NA")
View(test3)
test3 <- test2 %>%
filter(Species != "NA") %>%
sort(DATE.12, TIME.12)
test3 <- test2 %>%
filter(Species != "NA") %>%
arrange(DATE.12, TIME.12)
test3 <- test2 %>%
filter(Species != "NA") %>%
arrange(DATE.12, TIME.12, Site.Number)
test3 <- test2 %>%
filter(Species != "NA") %>%
filter(DATE.12 == "25/07/2016" & Site.Number == "T1")
test3 <- test2 %>%
filter(Species != "NA") %>%
filter(DATE.12 == "25/07/2016" & Site.Number == "T1") %>%
select(-variable)
test3 <- test2 %>%
filter(Species != "NA") %>%
select(-variable)
df_new <- right_join(df, test3, by = c("DATE.12", "Site.Number",
"TIME.12"))
View(df_new)
df_new <- left_join(df, test3, by = c("DATE.12", "Site.Number",
"TIME.12"))
View(df_new)
tester <- df %>%
select(DATE.12, Site.Number, TIME.12, MANUAL.ID) %>%
separate(MANUAL.ID, into = paste("v", 1:32, sep = " ")) %>%
gather(key = "variable",
value = "Species",
-Site.Number, -DATE.12, -TIME.12) %>%
filter(Species != "NA") %>%
select(-variable)
tester <- df %>%
select(DATE.12, Site.Number, TIME.12, MANUAL.ID) %>%
separate(MANUAL.ID, into = paste("v", 1:32, sep = " ")) %>%
gather(key = "variable",
value = "Species",
-Site.Number, -DATE.12, -TIME.12,
na.rm = TRUE) %>%
filter(Species != "NA") %>%
select(-variable)
select(-variable)
tester <- df %>%
select(DATE.12, Site.Number, TIME.12, MANUAL.ID) %>%
separate(MANUAL.ID, into = paste("v", 1:32, sep = " ")) %>%
gather(key = "variable",
value = "Species",
-Site.Number, -DATE.12, -TIME.12,
na.rm = TRUE) %>%
filter(Species != "") %>%
select(-variable)
View(tester)
new_data <- left_join(df, test3, by = c("DATE.12", "Site.Number",
"TIME.12"))
new_data <- left_join(df, tester, by = c("DATE.12", "Site.Number",
"TIME.12"))
View(new_data)
long_data2 <- df %>%
select(OUT.FILE, MANUAL.ID) %>%
separate(MANUAL.ID, into = paste("v", 1:32, sep = " ")) %>%
gather(key = "variable",
value = "Species",
-OUT.FILE,
na.rm = TRUE) %>%
filter(Species != "") %>%
select(-variable)
new_data2 <- left_join(df, long_data2, by = c("OUT.FILE"))
df_pf <- read.csv("//smbhome.uscs.susx.ac.uk/brs28/Downloads/Ecobat_ProForma.csv")
library(dplyr)
df_pf <- read.csv("//smbhome.uscs.susx.ac.uk/brs28/Downloads/Ecobat_ProForma.csv")
df_new <- read.csv("//smbhome.uscs.susx.ac.uk/brs28/Downloads/download.csv")
df_pf2 <- df_pf %>%
filter(Date == "31/08/2017" | Date == "01/09/2017")
count(df_pf2$Species)
df_pf$Species <- as.character(df_pf$Species)
count(df_pf2$Species)
df_pf$timestamp <- paste(df_pf$Date, df_pf$Time)
View(df_pf2)
View(df_pf)
df_pf$DateTime <- lubridate::dmy_hms(df_pf$timestamp,
tz = "Europe/London")
df_pf2 <- df_pf %>%
mutate(Night = DateTime - lubridate::hours(12)) %>% # DateTime minus 12 hours
mutate(Night = lubridate::as_date(Night)) %>%
mutate(Month = lubridate::month(Night, label = T)) %>% # Make Month of observation
filter(!is.na(species))
df_pf2 <- df_pf %>%
mutate(Night = DateTime - lubridate::hours(12)) %>% # DateTime minus 12 hours
mutate(Night = lubridate::as_date(Night)) %>%
mutate(Month = lubridate::month(Night, label = T)) %>% # Make Month of observation
filter(!is.na(Species))
df_count <- df_pf2 %>%
group_by(Night, Species) %>%
count()
View(df_new)
View(df_count)
sum(df_count$n)
df_pf2 <- df_pf %>%
mutate(Night = DateTime - lubridate::hours(12)) %>% # DateTime minus 12 hours
mutate(Night = lubridate::as_date(Night)) %>%
mutate(Month = lubridate::month(Night, label = T))
df_pf <- read.csv("//smbhome.uscs.susx.ac.uk/brs28/Downloads/Ecobat_ProForma.csv")
df_pf$Species <- as.character(df_pf$Species)
df_pf$timestamp <- paste(df_pf$Date, df_pf$Time)
df_pf$DateTime <- lubridate::dmy_hms(df_pf$timestamp,
tz = "Europe/London")
df_pf2 <- df_pf %>%
mutate(Night = DateTime - lubridate::hours(12)) %>% # DateTime minus 12 hours
mutate(Night = lubridate::as_date(Night)) %>%
mutate(Month = lubridate::month(Night, label = T)) %>% # Make Month of observation
filter(!is.na(Species))
df_count <- df_pf2 %>%
group_by(Night, Species) %>%
count()
df_test <- df_pf %>%
group_by(Date, Species) %>%
count()
View(df_test)
unique(df_pf$Number.of.bats)
df_pf2 <- df_pf %>%
mutate(Night = DateTime + lubridate::hours(12)) %>% # DateTime minus 12 hours
mutate(Night = lubridate::as_date(Night)) %>%
mutate(Month = lubridate::month(Night, label = T)) %>% # Make Month of observation
filter(!is.na(Species))
df_count <- df_pf2 %>%
group_by(Night, Species) %>%
count()
sum(df_pf$Number.of.bats)
df_pf2 <- df_pf %>%
mutate(Night = DateTime - lubridate::hours(12)) %>% # DateTime minus 12 hours
mutate(Night = lubridate::as_date(Night)) %>%
mutate(Month = lubridate::month(Night, label = T)) %>% # Make Month of observation
filter(!is.na(Species))
df_count <- df_pf2 %>%
group_by(Night, Species) %>%
count()
sum(df_count$n)
View(df_new)
df_new$timestamp <- paste(df_pf$Date, df_pf$Time)
df_new$timestamp <- paste(df_new$Date, df_new$Time)
df_new$timestamp <- paste(df_new$date, df_new$time)
df_new$DateTime <- lubridate::dmy_hms(df_new$timestamp,
tz = "Europe/London")
df_new2 <- df_new %>%
mutate(Night = DateTime - lubridate::hours(12)) %>% # DateTime minus 12 hours
mutate(Night = lubridate::as_date(Night)) %>%
mutate(Month = lubridate::month(Night, label = T)) %>% # Make Month of observation
filter(!is.na(Species))
df_new2 <- df_new %>%
mutate(Night = DateTime - lubridate::hours(12)) %>% # DateTime minus 12 hours
mutate(Night = lubridate::as_date(Night)) %>%
mutate(Month = lubridate::month(Night, label = T)) %>% # Make Month of observation
filter(!is.na(Spp))
df <- df_new %>%
dplyr::group_by(Night, Species) %>%
dplyr::top_n(1) %>%
filter(row_number()==1) %>%
dplyr::select(-time)
df_new2 <- df_new %>%
mutate(Night = DateTime - lubridate::hours(12)) %>% # DateTime minus 12 hours
mutate(Night = lubridate::as_date(Night)) %>%
mutate(Month = lubridate::month(Night, label = T))
View(df_new2)
df <- df_new %>%
dplyr::group_by(Night, species) %>%
dplyr::top_n(1) %>%
filter(row_number()==1) %>%
dplyr::select(-time)
df <- df_new2 %>%
dplyr::group_by(Night, species) %>%
dplyr::top_n(1) %>%
filter(row_number()==1) %>%
dplyr::select(-time)
View(df)
sum(df_new2$passes)
sum(df$passes)
sum(df_count$n)
sum(df_test$n)
shiny::runApp('Z:/Personal/Beth/MammalSociety/Ecobat/Ecobat/Nightly/App-1')
knitr::opts_chunk$set(echo = TRUE)
summary(cars)
knitr::opts_chunk$set(echo = FALSE, warning = FALSE, message=FALSE, comment=NULL)
#Libraries used
library(rmarkdown)
library(knitr) # needed for rmarkdown
library(dplyr) # used for all data wrangling (execpt percentiles)
library(suncalc) # Suntimes
library(lubridate) # best package for working with dates and times
library(ggplot2) # plotting graphs
library(pander) # useful for table creation in the markdown doc
library(reshape2) # used for wide/short data format conversions
library(janitor) # used to add totals rows to bottoms of tables
library(RColorBrewer) # used for colourblind friendly colour scales on figures
library(rcompanion)
library(png)
library(grid)
df <- read.csv("./test_data.csv")
shiny::runApp('Z:/Personal/Beth/MammalSociety/Ecobat/Ecobat/Nightly/App-1')
#load packages - not sure if necessary
library(shiny)
library(rmarkdown)
library(ggplot2)
library(knitr)
library(pander)
library(dplyr)
library(tidyr)
library(rcompanion)
library(suncalc)
library(ggforce)
library(janitor)
runApp('Z:/Personal/Beth/MammalSociety/Ecobat/Ecobat/Nightly/App-1')
library(installr)
updater()
#load packages - not sure if necessary
library(shiny)
shiny::runApp('Z:/Personal/Beth/MammalSociety/Ecobat/Ecobat/Nightly/App-1')
install.packages("shiny")
install.packages("shiny")
shiny::runApp('Z:/Personal/Beth/MammalSociety/Ecobat/Ecobat/Nightly/App-1')
install.packages("rsconnect")
library(rsconnect)
rm(\\smbhome.uscs.susx.ac.uk\brs28\Documents\R\R-3.6.1\library/00LOCK)
rm("\\smbhome.uscs.susx.ac.uk\brs28\Documents\R\R-3.6.1\library/00LOCK")
rm("//smbhome.uscs.susx.ac.uk/brs28/Documents/R/R-3.6.1/library/00LOCK")
library(rsconnect)
install.packages("rsconnect")
library(rsconnect)
rsconnect::setAccountInfo(name='ecobat',
token='2E4B1D55600FA49EC72A8F3ADA85261D',
secret='<SECRET>')
knitr::opts_chunk$set(echo = FALSE, warning = FALSE, message=FALSE, comment=NULL)
#load packages
library(rmarkdown)
library(ggplot2)
library(knitr)
library(pander)
library(plyr)
library(rcompanion)
library(tidyr)
library(lubridate)
library(ggforce)
library(shiny)
ui <- fluidPage(
)
server <- function(input, output, session) {
}
shinyApp(ui, server))
library(shiny)
rsconnect::setAccountInfo(name='ecobat',
token='2E4B1D55600FA49EC72A8F3ADA85261D',
secret='<SECRET>')
rsconnect::setAccountInfo(name='ecobat',
token='2E4B1D55600FA49EC72A8F3ADA85261D',
secret='y/i+h39Ceo18K26H3MhCIPjlStwl/JIn91InkgAy')
install.packages("tinytex")
library(tinytex)
library(installr)
updater()
install.packages("shiny")
install.packages("rmarkdown")
shiny::runApp('Z:/Personal/Beth/Mammal Society/Ecobat/Apps/Nightly/App-1')
