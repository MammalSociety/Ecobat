{if (max(new$n) > 5 & max(new$n) <=10)ylim(0,11)} +
{if (max(new$n) > 10 & max(new$n) <=20)ylim(0,22)} +
{if (max(new$n) > 20 & max(new$n) <=50)ylim(0,55)} +
{if (max(new$n) > 50 & max(new$n) <=100)ylim(0,110)} +
{if (max(new$n) > 100 & max(new$n) <=200)ylim(0,220)} +
theme_bw() +
theme (axis.title.y = element_text(colour="black", size=16,
face="bold")) +
theme (axis.title.x = element_text(colour="black", size=18,
face="bold")) +
theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.border = element_rect(colour="black", linetype="solid"),
axis.line=element_line(size=0.5, colour="black",
linetype="solid")) +
theme(axis.text.x = element_text(angle = 90, size=16, hjust=1, vjust=0.5,
colour = "black")) +
theme(axis.text.y = element_text(size = 14, colour = "black")) +
facet_wrap(~Month) +
theme(strip.text.x = element_text(size=12)) +
ggtitle(i) +
theme(plot.title = element_text(face = "bold.italic", size = 22)) +
theme(legend.position="none"))
}
for (i in unique(df$Spp)) {
new <- df %>%
dplyr::filter(Spp == i)
print(new %>%
ggplot2::ggplot(aes(location_name, passes.per.hour)) +
geom_boxplot(aes(fill=location_name)) +
ylab("Nightly Pass Rate (passes/hr/night)\n") +
xlab("\nDetector ID") +
{if (length(unique(new$location_name))>1)scale_fill_brewer(palette = "RdBu")} +
{if (max(new$n) > 0 & max(new$n) <=1)ylim(0,2)} +
{if (max(new$n) > 1 & max(new$n) <=2)ylim(0,3.0)} +
{if (max(new$n) > 2 & max(new$n) <=5)ylim(0,6)} +
{if (max(new$n) > 5 & max(new$n) <=10)ylim(0,11)} +
{if (max(new$n) > 10 & max(new$n) <=20)ylim(0,22)} +
{if (max(new$n) > 20 & max(new$n) <=50)ylim(0,55)} +
{if (max(new$n) > 50 & max(new$n) <=100)ylim(0,110)} +
{if (max(new$n) > 100 & max(new$n) <=200)ylim(0,220)} +
theme_bw() +
theme (axis.title.y = element_text(colour="black", size=16,
face="bold")) +
theme (axis.title.x = element_text(colour="black", size=18,
face="bold")) +
theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.border = element_rect(colour="black", linetype="solid"),
axis.line=element_line(size=0.5, colour="black",
linetype="solid")) +
theme(axis.text.x = element_text(angle = 90, size=16, hjust=1, vjust=0.5,
colour = "black")) +
theme(axis.text.y = element_text(size = 14, colour = "black")) +
facet_wrap(~Month) +
theme(strip.text.x = element_text(size=16)) +
ggtitle(i) +
theme(plot.title = element_text(face = "bold.italic", size = 22)) +
theme(legend.position="none"))
}
# add a column for bat passes per hour
All_data$passes.per.hour <- round((All_data$passes/All_data$night_length_hr),
digits = 2)
View(All_data)
# PERCENTILES
# only select one of each group and remove time, this leaves a df where each row is a nightly summary
df <- All_data %>%
dplyr::group_by(location_name, Night, Spp) %>%
dplyr::top_n(1) %>%
filter(row_number()==1) %>%
dplyr::select(-time)
recordsum <- ddply(df, c("location_name", "Spp"), summarise,
surv = length(species))
#now merge this back into the original csv - we don't want to delete any files at this stage
wp <- merge(df, recordsum, c("location_name","Spp")) #merge with original dataset - adds surv column onto end of dataset
spn<-length(unique(df$Spp))
loc<-length(unique(df$location_name))
# for the dates graphs, when >1 loc & >1 spp
n_pages <- ceiling(nrow(unique(df[,c("species", "location_name")]))/8)
# when 1 loc & >1 spp
n_pages1 <- ceiling(nrow(unique(df[,c("species", "location_name")]))/5)
cbbPalette <- c("#D55E00", "#0072B2","#56B4E9","#009E73","#E69F00") #set colour palette for graphs
df3 <- df %>%
dplyr::select(location_name, Night, Spp, passes.per.hour) %>%
spread(Spp, passes.per.hour) %>%
replace(is.na(.), 0)
df3 <- df %>%
dplyr::select(location_name, Night, Spp, passes.per.hour) %>%
spread(Spp, passes.per.hour) %>%
replace(is.na(.), 0) %>%
gather()
df3 <- df %>%
dplyr::select(location_name, Night, Spp, passes.per.hour) %>%
spread(Spp, passes.per.hour) %>%
replace(is.na(.), 0)
df3 <- df %>%
dplyr::select(location_name, Night, Spp, passes.per.hour) %>%
spread(Spp, passes.per.hour) %>%
replace(is.na(.), 0) %>%
gather(Night, location_name)
df3 <- df %>%
dplyr::select(location_name, Night, Spp, passes.per.hour) %>%
spread(Spp, passes.per.hour) %>%
replace(is.na(.), 0)
df4 <- df %>%
gather(species)
View(df4)
df4 <- df %>%
gather(species, value)
df4 <- df %>%
gather(species, value, c(Spp_list))
df4 <- df %>%
gather(species, value, Spp_list)
df4 <- df %>%
gather("species", "value", 3:18)
df4 <- df3 %>%
gather("species", "value", 3:18)
df4 <- df3 %>%
gather("species", "value")
df4 <- df3 %>%
gather("species", "value", 3:9)
df4 <- df3 %>%
gather("species", "value", 3:length(Spp_list))
df4 <- df3 %>%
gather("species", "value", 3:(length(Spp_list)+2))
df4 <- df3 %>%
gather("species", "passes.per.hour", 3:(length(Spp_list)+2))
df_raw <- df %>%
dplyr::select(location_name, Night, Spp, passes.per.hour, passes)
left_join(df_raw, df4, by = c("location_name", "Night", "Spp"))
left_join(df_raw, df4, by = c("location_name", "Night", "Spp"))
df4 <- df3 %>%
gather("Spp", "passes.per.hour", 3:(length(Spp_list)+2))
left_join(df_raw, df4, by = c("location_name", "Night", "Spp"))
test <- left_join(df_raw, df4, by = c("location_name", "Night", "Spp"))
View(test)
test <- full_join(df_raw, df4, by = c("location_name", "Night", "Spp"))
View(test)
test2 <- test %>%
dplyr::select(-passes.per.hour.x) %>%
dplyr::rename("passes.per.hour" = passes.per.hour.y) %>%
replace(is.na(.), 0) %>%
arrange(Night, location_name, Spp)
View(test2)
test2 <- test %>%
dplyr::select(-passes.per.hour.x) %>%
dplyr::rename("passes.per.hour" = passes.per.hour.y) %>%
replace(is.na(.), 0) %>%
arrange(location_name, Night, Spp)
df_spr <- df %>%
dplyr::select(location_name, Night, Spp, passes.per.hour) %>%
spread(Spp, passes.per.hour) %>%
replace(is.na(.), 0)
df_gath <- df_spr %>%
gather("Spp", "passes.per.hour", 3:(length(Spp_list)+2))
df_z <- full_join(df_raw, df4, by = c("location_name", "Night", "Spp"))
df_zero <- df_z %>%
dplyr::select(-passes.per.hour.x) %>%
dplyr::rename("passes.per.hour" = passes.per.hour.y) %>%
replace(is.na(.), 0) %>%
arrange(location_name, Night, Spp)
View(df_zero)
df_spr <- df %>%
spread(Spp, passes.per.hour) %>%
replace(is.na(.), 0)
df_gath <- df_spr %>%
gather("Spp", "passes.per.hour", 3:(length(Spp_list)+2))
df_z <- full_join(df_raw, df4, by = c("location_name", "Night", "Spp"))
df_zero <- df_z %>%
dplyr::select(-passes.per.hour.x) %>%
dplyr::rename("passes.per.hour" = passes.per.hour.y) %>%
replace(is.na(.), 0) %>%
arrange(location_name, Night, Spp)
View(df_zero)
df_spr <- df %>%
spread(Spp, passes.per.hour) %>%
replace(is.na(.), 0)
View(df_spr)
df_gath <- df_spr %>%
gather("Spp", "passes.per.hour", 3:(length(Spp_list)+2))
View(df_gath)
df_gath <- df_spr %>%
gather("Spp", "passes.per.hour", 47:(length(Spp_list)+46))
View(df_gath)
df_z <- full_join(df_raw, df4, by = c("location_name", "Night", "Spp"))
df_z <- full_join(df, df_gath, by = c("location_name", "Night", "Spp"))
df_spr <- df %>%
spread(Spp, passes.per.hour) %>%
replace(is.na(.), 0)
df_gath <- df_spr %>%
gather("Spp", "passes.per.hour", 47:(length(Spp_list)+46))
df_z <- full_join(df, df_gath, by = c("location_name", "Night", "Spp"))
df_zero <- df_z %>%
dplyr::select(-passes.per.hour.x) %>%
dplyr::rename("passes.per.hour" = passes.per.hour.y) %>%
replace(is.na(.), 0) %>%
arrange(location_name, Night, Spp)
View(df_z)
df_z <- full_join(df_gath, df, by = c("location_name", "Night", "Spp"))
View(df_z)
View(test)
View(All_data)
df_raw <- df %>%
dplyr::select(location_name, Night, Spp, passes.per.hour, lat)
df3 <- df %>%
dplyr::select(location_name, Night, Spp, passes.per.hour) %>%
spread(Spp, passes.per.hour) %>%
replace(is.na(.), 0)
df4 <- df3 %>%
gather("Spp", "passes.per.hour", 3:(length(Spp_list)+2))
test <- full_join(df_raw, df4, by = c("location_name", "Night", "Spp"))
test2 <- test %>%
dplyr::select(-passes.per.hour.x) %>%
dplyr::rename("passes.per.hour" = passes.per.hour.y) %>%
replace(is.na(.), 0) %>%
arrange(location_name, Night, Spp)
View(test2)
test2 <- test %>%
dplyr::select(-passes.per.hour.x) %>%
dplyr::rename("passes.per.hour" = passes.per.hour.y) %>%
arrange(location_name, Night, Spp)
test3 <- test2 %>%
fill(lat)
View(test3)
View(sun_data)
View(Detectors)
View(df)
test <- full_join(df_raw, df4)
test <- full_join(df_raw, df4)
View(test)
View(df_gath)
df_spr <- df %>%
spread(Spp, passes.per.hour)
View(df_spr)
df_gath <- df_spr %>%
gather("Spp", "passes.per.hour", 47:(length(Spp_list)+46))
df_gath <- df_spr %>%
gather("Spp", "passes.per.hour", 47:(length(Spp_list)+46)) %>%
arrange(location_name, Night, Spp)
write.csv(df, file = "./output.csv")
write.csv(df, file = "./output.csv")
write.csv(df, file = "//smbhome.uscs.susx.ac.uk/brs28/Desktop/MammalSociety/Ecobat/Ecobat/Nightly/App-1/output.csv")
read.csv("./output_test.csv")
getwd()
getwd()
setwd("//smbhome.uscs.susx.ac.uk/brs28/Desktop/MammalSociety/Ecobat/Ecobat/Nightly/App-1)
setwd("//smbhome.uscs.susx.ac.uk/brs28/Desktop/MammalSociety/Ecobat/Ecobat/Nightly/App-1")
read.csv("./output_test.csv")
new <- read.csv("./output_test.csv")
df_a <- new %>%
spread(Spp, passes.per.hour)
View(new)
new <- read.csv("./output_test.csv")
df_a <- new %>%
spread(Spp, passes.per.hour)
View(df_a)
df_a <- new %>%
dplyr::select(location_name, Night, Spp, passes.per.hour) %>%
spread(Spp, passes.per.hour)
View(df_a)
df_spr <- df %>%
dplyr::select(location_name, Night, Spp, passes.per.hour) %>%
spread(Spp, passes.per.hour)
View(df_spr)
df_gath <- df_spr %>%
gather("Spp", "passes.per.hour", 47:(length(Spp_list)+46)) %>%
arrange(location_name, Night, Spp)
View(df_spr)
df_b <- df_a %>%
gather("Spp", "passes.per.hour", 3:(length(Spp_list)+2))
df_b <- df_a %>%
gather("Spp", "passes.per.hour", 3:6))
df_b <- df_a %>%
gather("Spp", "passes.per.hour", 3:6)
View(df_b)
df_c <- full_join(new, df_b)
df_c <- full_join(new, df_b, by = c("location_name", "Night", "Spp"))
View(df_c)
df_c <- right_join(new, df_b, by = c("location_name", "Night", "Spp"))
df_c <- right_join(new, df_b, by = c("location_name", "Night", "Spp",
"passes.per.hour"))
df_d <- df_c %>%
dplyr::select(-passes.per.hour.x) %>%
dplyr::rename("passes.per.hour" = passes.per.hour.y) %>%
arrange(location_name, Night, Spp)
df_d <- df_c %>%
dplyr::rename("passes.per.hour" = passes.per.hour.y) %>%
arrange(location_name, Night, Spp)
df_d <- df_c %>%
arrange(location_name, Night, Spp)
View(df_d)
df_spr <- df %>%
dplyr::select(location_name, Night, Spp, passes.per.hour) %>%
spread(Spp, passes.per.hour)
df_gath <- df_spr %>%
gather("Spp", "passes.per.hour", 47:(length(Spp_list)+46)) %>%
arrange(location_name, Night, Spp)
# TESTING - load in test data
#B_data <- read.csv("../Data/RiggedHill.csv")
#B_data <- read.csv("//smbhome.uscs.susx.ac.uk/brs28/Downloads/download (5).csv")
B_data <- read.csv("./test_data.csv")
# TESTING - load in test data
#B_data <- read.csv("../Data/RiggedHill.csv")
#B_data <- read.csv("//smbhome.uscs.susx.ac.uk/brs28/Downloads/download (5).csv")
B_data <- read.csv("./test_data.csv")
# Standardize Variables@
# Output CSV from Ecobat puts weird symbol in front of location name, so need to remove:
cnames <- names(B_data)
cnames[grepl('location_name$', cnames)] <- 'location_name'
names(B_data) <- cnames
# if there is a separate column for date and time then join together to form a new column called Timestamp
if (("date" %in% colnames(B_data) == TRUE) &
("time" %in% colnames(B_data) == TRUE)) {
B_data$timestamp <- paste(B_data$date, B_data$time) }
# format correctly and specify timezone
# "Europe/London" accounts for daylight savings
B_data$DateTime <- lubridate::ymd_hms(B_data$timestamp, tz = "Europe/London")
# if above code gives NA, date format is dmy not ymd so do this:
if (NA %in% B_data$DateTime) {
B_data$DateTime <- lubridate::dmy_hms(B_data$timestamp, tz = "Europe/London")
}
# Create Useful Variables
# `Night` date at dusk
# `Month` month of observation `Jan, Feb, Mar....`
# `JustTime` time hh:mm of bat observation (12 hours added so plots correctly as `Night` i.e. dusk to dawn)
B_data2 <- B_data %>%
mutate(Night = DateTime - lubridate::hours(12)) %>% # DateTime minus 12 hours
mutate(Night = lubridate::as_date(Night)) %>%
mutate(Month = lubridate::month(Night, label = T)) %>% # Make Month of observation
filter(!is.na(species))
# Create suntimes
# Use package `suncalcs` to make `sunset` and `sunrise` columns for each `Night` and the location (`lat` and `lon`) of the bat survey.
# Get number nights between first and last bat observation (plus 1 for dawn)
num_nights <- as.integer(difftime(max(B_data2$Night) ,
min(B_data2$Night) ,
units = c("days"))) + 1
# Make a date vector of nights between first and last bat observation.
nightlist <- seq.Date(from=min(B_data2$Night),
length.out = num_nights +1,
by='days')
# Get suntimes for date vector and Location (lat and lon)
setdata <- getSunlightTimes(date = nightlist,
lat = median(B_data2$lat, na.rm = T),
lon = median(B_data2$lon, na.rm = T),
tz = "Europe/London")
# Duplicate data.frame to make sunrise data
risedata <- setdata
# Select  sunset date and time
setdata2 <- setdata %>%
select(date, sunset) %>%
mutate(date = lubridate::as_date(date))
# Select  sunrise date and time
risedata2 <- risedata %>%
select(date, sunrise) %>%
mutate(date = lubridate::as_date(date)) %>%
mutate(date = date - lubridate::days(1))
# Combine sunset and risedata by
sun_data <- dplyr::full_join(setdata2, risedata2, by="date")
# Rename date as Night
colnames(sun_data) <- c("Night", "sunset", "sunrise")
sun_data <- sun_data %>%
mutate(night_length_hr = as.numeric(difftime(sunrise, sunset, units='hours')),
night_length_min = as.numeric(difftime(sunrise, sunset, units='mins')))
# Join bat data with the sundata by Night
joined_data <- dplyr::left_join(B_data2, sun_data, by="Night")
#  ## Create Variables Relative to Suntimes and Bat Observation
#
#  Variables relative to suntimes and bat observation
#
# * `post_set_min` bat observation time minutes after sunset
#  * `pre_rise_min` bat observation time minutes before sunrise
#  * `post_set_hr` bat observation time hours after sunset
#  * `pre_rise_hr` bat observation time hours before sunrise
#  * `post_set_hr_int` bat observation time as an integer (hour) after sunset
#      + `-0.5` to `0.49` hours is `0` hour
#      + `0.5` to `1.49` hours is `1` hour
#      + `1.5` to `2.49` hours is `2` hour
#      + `2.5` to `3.49` hours is `3` hour ect...
#  * `pre_rise_hr_int` bat observation time as an integer (hour) before sunrise
#      + `-0.5` to `0.49` hours is `0` hour
#      + `0.5` to `1.49` hours is `1` hour
#      + `1.5` to `2.49` hours is `2` hour
#      + `2.5` to `3.49` hours is `3` hour ect...
#  * `night_length_hr`  length of the night in hours
# To make sure difference is in minutes/hours etc... use difftime
All_data <- joined_data %>%
mutate(post_set_min = as.numeric(difftime(DateTime, sunset, units='mins')),
pre_rise_min = as.numeric(difftime(sunrise, DateTime, units='mins')),
post_set_hr = as.numeric(difftime(DateTime, sunset, units='hours')),
pre_rise_hr = as.numeric(difftime(sunrise, DateTime, units='hours')),
post_set_hr_int = as.integer(round(post_set_hr, digits = 0)),
pre_rise_hr_int = as.integer(round(pre_rise_hr, digits = 0)))
#Russ(2012) Bat roost emergence times minutes after sunset
# correspond a common name to each scientific name
species <- c("Barbastella barbastellus",
"Eptesicus serotinus",
"Eptesicus",
"Myotis alcathoe",
"Myotis bechsteinii",
"Myotis brandtii",
"Myotis daubentonii",
"Myotis mystacinus",
"Myotis nattereri",
"Myotis",
"Nyctalus leisleri",
"Nyctalus noctula",
"Nyctalus",
"Nyctaloid",
"Pipistrellus nathusii",
"Pipistrellus pipistrellus",
"Pipistrellus pygmaeus",
"Pipistrellus",
"Plecotus auritus",
"Plecotus austriacus",
"Plecotus",
"Rhinolophus ferrumequinum",
"Rhinolophus hipposideros",
"Rhinolophus")
Spp <- c("Barbastelle",
"Serotine",
"Serotine",
"Alcathoe",
"Bechstein's",
"Brandt's",
"Daubenton's",
"Whiskered",
"Natterer's",
"Myotis",
"Leisler's",
"Noctule",
"Nyctalus",
"Nyctaloid",
"Nathusius'",
"Common pipistrelle",
"Soprano pipistrelle",
"Pipistrellus",
"Brown long-eared",
"Grey long-eared",
"Long-eared bats",
"Greater horseshoe",
"Lesser horseshoe",
"Horseshoe bats")
# create a table of roost emergence times for each species
lower <- c(25, 20, 20, 30, 30, 30, 50, 30, 35, 30, 8, 5, 5, 5, 18, 22, 22, 18, 40, 40, 40, 35, 35, 35)
upper <- c(60, 25, 25, 35, 33, 35, 70, 35, 55, 70, 18, 9, 18, 25, 28, 32, 28, 32, 60, 60, 60, 48, 50, 50)
russ <- tibble(species, Spp, lower, upper)
#Join with Jon Russ data with bat observation data All_data
All_data <- dplyr::left_join(All_data, russ, by = "species")
# add a column for bat passes per hour
All_data$passes.per.hour <- round((All_data$passes/All_data$night_length_hr),
digits = 2)
# create lists to be used for tables and graphs later:
# list of all of the unique locations in the dataset
Dets <- c(unique(All_data$location_name))
# list of all of the different species in the dataset
species_list <- unique(All_data$species)
Spp_list <- unique(All_data$Spp)
# dataframe of survey days
Surv.days <- as.data.frame(unique(All_data$Night)) #all unique survey nights
Surv.days.N <- length(Surv.days$`unique(All_data$Night)`) #count of survey nights
Surv.days.M <- Surv.days %>%
mutate(Month = lubridate::month((unique(All_data$Night)), label = T)) %>%
dplyr::count(Month) #count of survey days per month
colourCount <- length(unique(All_data$Spp))
getPalette <- colorRampPalette(brewer.pal(9, "RdBu"))
# specify order for the species to be listed in
All_data$Spp <- factor(All_data$Spp,levels=c("Pipistrellus", "Common pipistrelle", "Soprano pipistrelle", "Nathusius'", "Noctule", "Leisler's", "Nyctalus", "Serotine", "Nyctaloid", "Brown long-eared", "Grey long-eared", "Long-eared bats", "Myotis","Alcathoe", "Bechstein's",  "Brandt's", "Daubenton's","Whiskered", "Natterer's", "Barbastelle", "Greater horseshoe", "Lesser horseshoe", "Horseshoe bats"))
Table <- All_data %>%
dplyr::select(location_name, lat, lon) %>%
dplyr::group_by(location_name, lat, lon) %>%
dplyr::distinct() %>%
dplyr::rename("Detector ID" = location_name, "Latitude" = lat,
"Longitude" = lon)
knitr::kable(Table, align = "l")
# PERCENTILES
# only select one of each group and remove time, this leaves a df where each row is a nightly summary
df <- All_data %>%
dplyr::group_by(location_name, Night, Spp) %>%
dplyr::top_n(1) %>%
filter(row_number()==1) %>%
dplyr::select(-time)
recordsum <- ddply(df, c("location_name", "Spp"), summarise,
surv = length(species))
#now merge this back into the original csv - we don't want to delete any files at this stage
wp <- merge(df, recordsum, c("location_name","Spp")) #merge with original dataset - adds surv column onto end of dataset
spn<-length(unique(df$Spp))
loc<-length(unique(df$location_name))
# for the dates graphs, when >1 loc & >1 spp
n_pages <- ceiling(nrow(unique(df[,c("species", "location_name")]))/8)
# when 1 loc & >1 spp
n_pages1 <- ceiling(nrow(unique(df[,c("species", "location_name")]))/5)
cbbPalette <- c("#D55E00", "#0072B2","#56B4E9","#009E73","#E69F00") #set colour palette for graphs
df_spr <- df %>%
dplyr::select(location_name, Night, Spp, passes.per.hour) %>%
spread(Spp, passes.per.hour)
View(df_spr)
df_gath <- df_spr %>%
gather("Spp", "passes.per.hour", 3:(length(Spp_list)+2)) %>%
arrange(location_name, Night, Spp)
df_gath <- df_spr %>%
gather("Spp", "passes.per.hour", 3:(length(Spp_list)+2)) %>%
replace(is.na(.), 0) %>%
arrange(location_name, Night, Spp)
df_z <- right_join(df_gath, df, by = c("location_name", "Night", "Spp",
"passes.per.hour"))
View(df_z)
df_z <- right_join(df, df_gath, by = c("location_name", "Night", "Spp",
"passes.per.hour"))
View(df_z)
df_z <- right_join(df, df_gath, by = c("location_name", "Night", "Spp",
"passes.per.hour")) %>%
arrange(location_name, Night, Spp)
